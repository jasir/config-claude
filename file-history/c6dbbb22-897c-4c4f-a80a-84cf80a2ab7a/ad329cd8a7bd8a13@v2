# db:restore

Obnoví PostgreSQL databázi ze zálohy vytvořené příkazem `db:dump`.

## Použití

```bash
alt db:restore [volby] <cesta_k_zaloze>
```

## Argumenty

- `<cesta_k_zaloze>` - Cesta k SQL souboru zálohy (povinný argument)

## Volby

- `-h, --host [host]` - PostgreSQL hostitel (výchozí: devel.altisima.cz)
- `-p, --port [port]` - PostgreSQL port (výchozí: 10097)
- `-u, --username [uživatel]` - Uživatelské jméno (výchozí: postgres)
- `--password [heslo]` - Heslo (nebo použijte proměnnou PGPASSWORD)
- `-d, --db [databáze]` - Název databáze pro obnovu (musí existovat)
- `--verbose` - Zobrazí detaily připojení a průběh obnovy
- `--force` - Přeskočí ověření a vynutí obnovu

## Příklady

### Základní obnova:
```bash
# Obnoví databázi ze zálohy
alt db:restore ~/dumps/projekt_zaloha/20250929-210512.sql
```

### Obnova do konkrétní databáze:
```bash
# Obnoví data do specifické databáze
alt db:restore ~/dumps/produkt_zaloha/20250929-200000.sql --db mujprojekt
```

### S detailním výstupem:
```bash
# Zobrazí průběh obnovy
alt db:restore ~/dumps/test_zaloha/20250929-190000.sql --db testdb --verbose
```

### Vynucená obnova:
```bash
# Obnoví přes existující data
alt db:restore ~/dumps/critical_zaloha/20250929-180000.sql --db kriticka_db --force
```

## Výstup

Příkaz zobrazí průběh obnovy:

```
✓ Připojeno k PostgreSQL (devel.altisima.cz:10097)
✓ Databáze: mujprojekt
✓ Obnova dokončena: 12345 řádků obnoveno
✓ Indexy obnoveny
✓ Oprávnění obnovena
```

## Předpoklady

### Cílová databáze musí existovat:
```bash
# Zkontrolujte existenci databáze
alt db:list

# Vytvořte databázi pokud neexistuje
alt db:create mujprojekt
```

### Správná oprávnění:
```bash
# Uživatel musí mít práva k zápisu do databáze
# Zkontrolujte připojení
alt db:version --verbose
```

## Řešení problémů

### Soubor zálohy neexistuje:
```bash
# Zkontrolujte cestu k souboru
ls -la ~/dumps/projekt_zaloha/

# Najděte nejnovější zálohu
ls -la ~/dumps/projekt_zaloha/ | tail -1
```

### Databáze neexistuje:
```bash
# Vytvořte cílovou databázi
alt db:create cilova_databaze

# Nebo obnovte do existující databáze
alt db:restore zaloha.sql --db existujici_db
```

### Nedostatek místa na disku:
```bash
# Zkontrolujte volné místo
df -h

# Vyčistěte staré zálohy
find ~/dumps/ -name "*.sql" -mtime +30 -delete
```

### Konflikt existujících dat:
```bash
# Použijte --force pro přepsání existujících dat
alt db:restore zaloha.sql --db cilova_db --force

# Nebo vyčistěte databázi před obnovou
alt db:sql cilova_db "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"
```

### Chyba připojení:
```bash
# Otestujte připojení k databázi
alt db:version --verbose

# Zkontrolujte proměnné prostředí
echo $PGPASSWORD
echo $PGUSER
```

## Technické detaily

- Používá `psql` utility pro obnovu databáze
- Podporuje obnovu z plain SQL formátu
- Automaticky spravuje transakce pro konzistenci dat
- Obnovuje data, indexy, vazby a oprávnění
- Podporuje velké soubory záloh

## Doporučený workflow

```bash
# 1. Vytvořte zálohu před změnami
alt db:dump pred_obnovou --db produkce_db

# 2. Připravte cílovou databázi
alt db:create test_db

# 3. Obnovte data
alt db:restore ~/dumps/produkce_zaloha/20250929-210512.sql --db test_db --verbose

# 4. Ověřte obnovená data
alt db:table test_db uzivatele --limit 10
alt db:sql test_db "SELECT COUNT(*) FROM uzivatele"

# 5. Pokud je vše v pořádku, aplikujte změny na produkci
alt db:sql produkce_db "BEGIN; -- vaše změny -- COMMIT;"
```

## Strategie obnovy

### Plná obnova:
```bash
# Vytvořte novou databázi a obnovte vše
alt db:create nova_databaze
alt db:restore ~/dumps/plna_zaloha/20250929-210512.sql --db nova_databaze
```

### Částečná obnova:
```bash
# Obnovte konkrétní tabulku z zálohy
alt db:sql cilova_db "TRUNCATE TABLE uzivatele;"
alt db:sql cilova_db < ~/dumps/zaloha.sql  # pouze část s tabulkou
```

### Obnova konkrétního časového bodu:
```bash
# Použijte zálohu z konkrétního času
alt db:restore ~/dumps/cron_zaloha/20250929-000000.sql --db produkce_db
```

## Bezpečnostní doporučení

- Vždy testujte obnovu na testovací databázi před produkčním nasazením
- Mějte jasný plán obnovy pro případ výpadku
- Pravidelně testujte obnovu z různých záloh
- Udržujte historii záloh pro možnost vrácení k různým časovým bodům
- Omezte přístup k příkazu `db:restore` na povolené uživatele

## Viz také

- [db:dump](db-dump.md) - Vytvoření zálohy databáze
- [db:create](db-create.md) - Vytvoření databáze
- [db:list](db-list.md) - Výpis databází
- [db:sql](db-sql.md) - Provádění SQL dotazů
- [db:table](db-table.md) - Prohlížení tabulek

## Možnosti databáze

Všechny databázové příkazy podporují standardní možnosti připojení. Viz [hlavní dokumentace](../index.md#konfigurace) pro detaily.