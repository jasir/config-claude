# db:version

Zobrazí verzi PostgreSQL serveru a detailní informace o konfiguraci.

## Použití

```bash
alt db:version [volby]
```

## Volby

- `-h, --host [host]` - PostgreSQL hostitel (výchozí: devel.altisima.cz)
- `-p, --port [port]` - PostgreSQL port (výchozí: 10097)
- `-u, --username [uživatel]` - Uživatelské jméno (výchozí: postgres)
- `--password [heslo]` - Heslo (nebo použijte proměnnou PGPASSWORD)
- `-d, --db [databáze]` - Název databáze pro připojení (výchozí: postgres)
- `--verbose` - Zobrazí detailní informace o verzi
- `--json` - Formátuje výstup jako JSON
- `--server` - Zobrazí pouze verzi serveru
- `--client` - Zobrazí pouze verzi klienta
- `--full` - Zobrazí kompletní informace o systému
- `--settings` - Zobrazí důležitá nastavení
- `--extensions` - Zobrazí nainstalovaná rozšíření
- `--compatibility` - Zkontroluje kompatibilitu s aplikacemi

## Příklady

### Základní informace o verzi:
```bash
# Zobrazí verzi PostgreSQL serveru
alt db:version
```

### Detailní informace:
```bash
# Zobrazí detailní informace o verzi
alt db:version --verbose

# Kompletní informace o systému
alt db:version --full
```

### Různé formáty výstupu:
```bash
# JSON formát pro skripty
alt db:version --json

# Pouze verze serveru
alt db:version --server

# Pouze verze klienta
alt db:version --client
```

### Konfigurační informace:
```bash
# Důležitá nastavení
alt db:version --settings

# Nainstalovaná rozšíření
alt db:version --extensions

# Kontrola kompatibility
alt db:version --compatibility
```

## Výstup

### Standardní výstup:
```
=== Verze PostgreSQL ===
Server verze: PostgreSQL 15.3
Client verze: psql 15.3
PostgreSQL binární verze: 15.3
PostgreSQL knihovna: 15.3

Build informace:
- Kompilováno: gcc 11.3.0
- Platforma: x86_64-pc-linux-gnu
- Optimalizace: -O2
- Debug symboly: ano
```

### Detailní výstup (--verbose):
```
=== Detailní verze PostgreSQL ===
Server verze: PostgreSQL 15.3 (Debian 15.3-1.pgdg120+1)
Server OS: Linux
Server architektura: x86_64
Server procesor: x86_64

Časová zóna: Europe/Prague
Encoding: UTF8
Collate: cs_CZ.UTF-8
Ctype: cs_CZ.UTF-8

Maximální počet připojení: 100
Maximální velikost paměti: 4GB
Checkpoint timeout: 5min
WAL segmenty: 32
```

### JSON výstup:
```json
{
  "server": {
    "version": "15.3",
    "full_version": "PostgreSQL 15.3 (Debian 15.3-1.pgdg120+1)",
    "os": "Linux",
    "architecture": "x86_64",
    "timezone": "Europe/Prague",
    "encoding": "UTF8",
    "max_connections": 100,
    "shared_buffers": "4GB"
  },
  "client": {
    "version": "15.3",
    "binary_version": "15.3",
    "library_version": "15.3"
  }
}
```

### Nastavení (--settings):
```
=== Důležitá nastavení ===
max_connections: 100
shared_buffers: 4GB
effective_cache_size: 12GB
work_mem: 4MB
maintenance_work_mem: 64MB
checkpoint_completion_target: 0.9
wal_buffers: 16MB
default_statistics_target: 100
random_page_cost: 1.1
effective_io_concurrency: 200
```

### Rozšíření (--extensions):
```
=== Nainstalovaná rozšíření ===
plpgsql: 1.0
uuid-ossp: 1.1
pgcrypto: 1.3
postgis: 3.3.2
pg_stat_statements: 1.9
pg_buffercache: 1.3
```

### Kompatibilita (--compatibility):
```
=== Kontrola kompatibility ===
✅ Verze PostgreSQL 15.3 je podporována
✅ Všechna potřebná rozšíření jsou nainstalována
✅ Nastavení paměti je adekvátní
⚠️  Doporučeno zvýšit max_connections pro produkční prostředí
✅ Časová zóna je správně nastavena
```

## Řešení problémů

### Připojení selhalo:
```bash
# Zkontrolujte připojení
alt db:version --verbose

# Otestujte připojení ručně
psql -h devel.altisima.cz -p 10097 -U postgres -d postgres -c "SELECT version();"
```

### Verze není podporována:
```bash
# Zkontrolujte minimální verzi
alt db:version --compatibility

# Vytvořte plán upgradu
alt db:sql postgres "SELECT version();"
```

### Chybějící rozšíření:
```bash
# Zkontrolujte nainstalovaná rozšíření
alt db:version --extensions

# Nainstalujte chybějící rozšíření
alt db:sql produkce_db "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"
```

## Technické detaily

- Používá `psql` utility pro získání informací
- Dotazuje se na systémové katalogy PostgreSQL
- Podporuje všechny PostgreSQL verze od 9.6+
- Automaticky detekuje kompatibilitu s aplikacemi
- Zobrazuje podrobné informace o kompilaci

## Použití ve skriptech

### Bash skript pro kontrolu verze:
```bash
#!/bin/bash
# Zkontrolujte verzi PostgreSQL
PG_VERSION=$(alt db:version --json | jq -r '.server.version')
echo "PostgreSQL verze: $PG_VERSION"

# Zkontrolujte kompatibilitu
if [[ "$PG_VERSION" < "14" ]]; then
    echo "Varování: Doporučeno upgradovat na PostgreSQL 14 nebo vyšší"
fi
```

### Automatizovaný monitoring:
```bash
#!/bin/bash
# Zkontrolujte nastavení
MAX_CONNECTIONS=$(alt db:version --json | jq -r '.server.max_connections')
CURRENT_CONNECTIONS=$(alt db:info --json | jq '.connections.active')

if [[ "$CURRENT_CONNECTIONS" -gt "$((MAX_CONNECTIONS * 80 / 100))" ]]; then
    echo "Varování: Vysoký počet připojení ($CURRENT_CONNECTIONS/$MAX_CONNECTIONS)"
fi
```

### Příprava na upgrade:
```bash
#!/bin/bash
# Zkontrolujte verzi před upgradem
CURRENT_VERSION=$(alt db:version --json | jq -r '.server.version')
echo "Aktuální verze: $CURRENT_VERSION"

# Zkontrolujte kompatibilitu aplikace
alt db:version --compatibility

# Vytvořte zálohu před upgradem
alt db:dump pred_upgrade
```

## Verzování a kompatibilita

### Podporované verze:
- PostgreSQL 9.6+ (základní podpora)
- PostgreSQL 12+ (doporučená verze)
- PostgreSQL 14+ (optimální verze)

### Kompatibilní rozšíření:
- **Základní**: plpgsql, uuid-ossp, pgcrypto
- **Geoprostorové**: postgis, postgis_topology
- **Monitoring**: pg_stat_statements, pg_buffercache
- **Výkon**: pg_prewarm, pg_visibility

### Kontrola kompatibility:
```bash
# Kompletní kontrola kompatibility
alt db:version --compatibility

# Kontrola specifických funkcí
alt db:sql produkce_db "SELECT proname FROM pg_proc WHERE proname = 'generate_uuid';"
```

## Bezpečnostní doporučení

- Pravidelně aktualizujte PostgreSQL na nejnovější verzi
- Monitorujte bezpečnostní záplaty a aktualizace
- Omezte přístup k informacím o verzi
- Udržujte záznamy o změnách verze
- Testujte kompatibilitu před upgradem

## Správa verzí

### Plánování upgradu:
```bash
# 1. Zkontrolujte aktuální verzi
alt db:version --full

# 2. Zkontrolujte kompatibilitu
alt db:version --compatibility

# 3. Vytvořte zálohu
alt db:dump pred_upgrade

# 4. Proveďte upgrade
# (proces upgradu závisí na metodě)

# 5. Ověřte upgrade
alt db:version --compatibility
```

### Sledování změn:
```bash
# Zaznamenejte verzi do logu
alt db:version --json >> /var/log/pg_version.log

# Porovnejte verze
diff /var/log/pg_version.log /var/log/pg_version_prev.log
```

## Viz také

- [db:info](db-info.md) - Informace o databázi
- [db:list](db-list.md) - Výpis databází
- [db:sql](db-sql.md) - Provádění SQL dotazů
- [db:settings](db-settings.md) - Nastavení PostgreSQL
- [db:upgrade](db-upgrade.md) - Upgrade PostgreSQL

## Možnosti databáze

Všechny databázové příkazy podporují standardní možnosti připojení. Viz [hlavní dokumentace](../index.md#konfigurace) pro detaily.